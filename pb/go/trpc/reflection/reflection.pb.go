// Tencent is pleased to support the open source community by making tRPC available.
// Copyright (C) 2023 THL A29 Limited, a Tencent company. All rights reserved.
// If you have downloaded a copy of the tRPC source code from Tencent,
// please note that tRPC source code is licensed under the Apache 2.0 License,
// A copy of the Apache 2.0 License is included in this file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.27.1
// source: trpc/reflection/reflection.proto

package reflection

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The message sent by the client when calling ServerReflectionInfo method.
type ServerReflectionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Host  string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// To use reflection service, the client should set one of the following
	// fields in message_request. The server distinguishes requests by their
	// defined field and then handles them using corresponding methods.
	//
	// Types that are valid to be assigned to MessageRequest:
	//
	//	*ServerReflectionRequest_FileContainingSymbol
	//	*ServerReflectionRequest_ListServices
	//	*ServerReflectionRequest_FileByFilename
	MessageRequest isServerReflectionRequest_MessageRequest `protobuf_oneof:"message_request"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ServerReflectionRequest) Reset() {
	*x = ServerReflectionRequest{}
	mi := &file_trpc_reflection_reflection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerReflectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerReflectionRequest) ProtoMessage() {}

func (x *ServerReflectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_reflection_reflection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerReflectionRequest.ProtoReflect.Descriptor instead.
func (*ServerReflectionRequest) Descriptor() ([]byte, []int) {
	return file_trpc_reflection_reflection_proto_rawDescGZIP(), []int{0}
}

func (x *ServerReflectionRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ServerReflectionRequest) GetMessageRequest() isServerReflectionRequest_MessageRequest {
	if x != nil {
		return x.MessageRequest
	}
	return nil
}

func (x *ServerReflectionRequest) GetFileContainingSymbol() string {
	if x != nil {
		if x, ok := x.MessageRequest.(*ServerReflectionRequest_FileContainingSymbol); ok {
			return x.FileContainingSymbol
		}
	}
	return ""
}

func (x *ServerReflectionRequest) GetListServices() string {
	if x != nil {
		if x, ok := x.MessageRequest.(*ServerReflectionRequest_ListServices); ok {
			return x.ListServices
		}
	}
	return ""
}

func (x *ServerReflectionRequest) GetFileByFilename() string {
	if x != nil {
		if x, ok := x.MessageRequest.(*ServerReflectionRequest_FileByFilename); ok {
			return x.FileByFilename
		}
	}
	return ""
}

type isServerReflectionRequest_MessageRequest interface {
	isServerReflectionRequest_MessageRequest()
}

type ServerReflectionRequest_FileContainingSymbol struct {
	// Find the proto file that declares the given fully-qualified symbol name.
	// This field should be a fully-qualified symbol name
	// (e.g. <package>.<service>[.<method>] or <package>.<type>).
	FileContainingSymbol string `protobuf:"bytes,3,opt,name=file_containing_symbol,json=fileContainingSymbol,proto3,oneof"`
}

type ServerReflectionRequest_ListServices struct {
	// List the full names of registered services. The content will not be
	// checked.
	ListServices string `protobuf:"bytes,4,opt,name=list_services,json=listServices,proto3,oneof"`
}

type ServerReflectionRequest_FileByFilename struct {
	// Find a proto file by the file name.
	FileByFilename string `protobuf:"bytes,5,opt,name=file_by_filename,json=fileByFilename,proto3,oneof"`
}

func (*ServerReflectionRequest_FileContainingSymbol) isServerReflectionRequest_MessageRequest() {}

func (*ServerReflectionRequest_ListServices) isServerReflectionRequest_MessageRequest() {}

func (*ServerReflectionRequest_FileByFilename) isServerReflectionRequest_MessageRequest() {}

// The message sent by the server to answer ServerReflectionInfo method.
type ServerReflectionResponse struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	ValidHost       string                   `protobuf:"bytes,1,opt,name=valid_host,json=validHost,proto3" json:"valid_host,omitempty"`
	OriginalRequest *ServerReflectionRequest `protobuf:"bytes,2,opt,name=original_request,json=originalRequest,proto3" json:"original_request,omitempty"`
	// The server sets one of the following fields according to the message_request
	// in the request.
	//
	// Types that are valid to be assigned to MessageResponse:
	//
	//	*ServerReflectionResponse_FileDescriptorResponse
	//	*ServerReflectionResponse_ListServicesResponse
	//	*ServerReflectionResponse_ErrorResponse
	MessageResponse isServerReflectionResponse_MessageResponse `protobuf_oneof:"message_response"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ServerReflectionResponse) Reset() {
	*x = ServerReflectionResponse{}
	mi := &file_trpc_reflection_reflection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerReflectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerReflectionResponse) ProtoMessage() {}

func (x *ServerReflectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_reflection_reflection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerReflectionResponse.ProtoReflect.Descriptor instead.
func (*ServerReflectionResponse) Descriptor() ([]byte, []int) {
	return file_trpc_reflection_reflection_proto_rawDescGZIP(), []int{1}
}

func (x *ServerReflectionResponse) GetValidHost() string {
	if x != nil {
		return x.ValidHost
	}
	return ""
}

func (x *ServerReflectionResponse) GetOriginalRequest() *ServerReflectionRequest {
	if x != nil {
		return x.OriginalRequest
	}
	return nil
}

func (x *ServerReflectionResponse) GetMessageResponse() isServerReflectionResponse_MessageResponse {
	if x != nil {
		return x.MessageResponse
	}
	return nil
}

func (x *ServerReflectionResponse) GetFileDescriptorResponse() *FileDescriptorResponse {
	if x != nil {
		if x, ok := x.MessageResponse.(*ServerReflectionResponse_FileDescriptorResponse); ok {
			return x.FileDescriptorResponse
		}
	}
	return nil
}

func (x *ServerReflectionResponse) GetListServicesResponse() *ListServiceResponse {
	if x != nil {
		if x, ok := x.MessageResponse.(*ServerReflectionResponse_ListServicesResponse); ok {
			return x.ListServicesResponse
		}
	}
	return nil
}

func (x *ServerReflectionResponse) GetErrorResponse() *ErrorResponse {
	if x != nil {
		if x, ok := x.MessageResponse.(*ServerReflectionResponse_ErrorResponse); ok {
			return x.ErrorResponse
		}
	}
	return nil
}

type isServerReflectionResponse_MessageResponse interface {
	isServerReflectionResponse_MessageResponse()
}

type ServerReflectionResponse_FileDescriptorResponse struct {
	// This message is used to answer file_containing_symbol,
	// As the repeated label is not allowed in oneof fields, we use a
	// FileDescriptorResponse message to encapsulate the repeated fields.
	FileDescriptorResponse *FileDescriptorResponse `protobuf:"bytes,4,opt,name=file_descriptor_response,json=fileDescriptorResponse,proto3,oneof"`
}

type ServerReflectionResponse_ListServicesResponse struct {
	// This message is used to answer list_services requests.
	ListServicesResponse *ListServiceResponse `protobuf:"bytes,5,opt,name=list_services_response,json=listServicesResponse,proto3,oneof"`
}

type ServerReflectionResponse_ErrorResponse struct {
	// This message is used when an error occurs.
	ErrorResponse *ErrorResponse `protobuf:"bytes,6,opt,name=error_response,json=errorResponse,proto3,oneof"`
}

func (*ServerReflectionResponse_FileDescriptorResponse) isServerReflectionResponse_MessageResponse() {
}

func (*ServerReflectionResponse_ListServicesResponse) isServerReflectionResponse_MessageResponse() {}

func (*ServerReflectionResponse_ErrorResponse) isServerReflectionResponse_MessageResponse() {}

// Serialized FileDescriptorProto messages sent by the server answering
// a file_by_filename, file_containing_symbol, or file_containing_extension
// request.
type FileDescriptorResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Serialized FileDescriptorProto messages. We avoid taking a dependency on
	// descriptor.proto, which uses proto2 only features, by making them opaque
	// bytes instead.
	FileDescriptorProto [][]byte `protobuf:"bytes,1,rep,name=file_descriptor_proto,json=fileDescriptorProto,proto3" json:"file_descriptor_proto,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FileDescriptorResponse) Reset() {
	*x = FileDescriptorResponse{}
	mi := &file_trpc_reflection_reflection_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDescriptorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDescriptorResponse) ProtoMessage() {}

func (x *FileDescriptorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_reflection_reflection_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDescriptorResponse.ProtoReflect.Descriptor instead.
func (*FileDescriptorResponse) Descriptor() ([]byte, []int) {
	return file_trpc_reflection_reflection_proto_rawDescGZIP(), []int{2}
}

func (x *FileDescriptorResponse) GetFileDescriptorProto() [][]byte {
	if x != nil {
		return x.FileDescriptorProto
	}
	return nil
}

// A list of ServiceResponse sent by the server answering list_services request.
type ListServiceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The information of each service may be expanded in the future, so we use
	// ServiceResponse message to encapsulate it.
	Service       []*ServiceResponse `protobuf:"bytes,1,rep,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServiceResponse) Reset() {
	*x = ListServiceResponse{}
	mi := &file_trpc_reflection_reflection_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceResponse) ProtoMessage() {}

func (x *ListServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_reflection_reflection_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceResponse.ProtoReflect.Descriptor instead.
func (*ListServiceResponse) Descriptor() ([]byte, []int) {
	return file_trpc_reflection_reflection_proto_rawDescGZIP(), []int{3}
}

func (x *ListServiceResponse) GetService() []*ServiceResponse {
	if x != nil {
		return x.Service
	}
	return nil
}

// The information of a single service used by ListServiceResponse to answer
// list_services request.
type ServiceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Full name of a registered service, including its package name.
	// The format is <package>.<service>
	// https://github.com/trpc-group/trpc/blob/master/trpc/trpc.proto#L465 package.Service
	InterfaceServiceName string `protobuf:"bytes,1,opt,name=interface_service_name,json=interfaceServiceName,proto3" json:"interface_service_name,omitempty"`
	// eg: polaris, 123 platform format: trpc.app.server.service.
	RoutingServiceName string `protobuf:"bytes,2,opt,name=routing_service_name,json=routingServiceName,proto3" json:"routing_service_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ServiceResponse) Reset() {
	*x = ServiceResponse{}
	mi := &file_trpc_reflection_reflection_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponse) ProtoMessage() {}

func (x *ServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_reflection_reflection_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponse.ProtoReflect.Descriptor instead.
func (*ServiceResponse) Descriptor() ([]byte, []int) {
	return file_trpc_reflection_reflection_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceResponse) GetInterfaceServiceName() string {
	if x != nil {
		return x.InterfaceServiceName
	}
	return ""
}

func (x *ServiceResponse) GetRoutingServiceName() string {
	if x != nil {
		return x.RoutingServiceName
	}
	return ""
}

// The error code and error message sent by the server when an error occurs.
type ErrorResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This field uses the error codes defined in trpc.proto TrpcRetCode.
	ErrorCode     int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage  string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_trpc_reflection_reflection_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_reflection_reflection_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_trpc_reflection_reflection_proto_rawDescGZIP(), []int{5}
}

func (x *ErrorResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ErrorResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_trpc_reflection_reflection_proto protoreflect.FileDescriptor

const file_trpc_reflection_reflection_proto_rawDesc = "" +
	"\n" +
	" trpc/reflection/reflection.proto\x12\x12trpc.reflection.v1\"\xcb\x01\n" +
	"\x17ServerReflectionRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x126\n" +
	"\x16file_containing_symbol\x18\x03 \x01(\tH\x00R\x14fileContainingSymbol\x12%\n" +
	"\rlist_services\x18\x04 \x01(\tH\x00R\flistServices\x12*\n" +
	"\x10file_by_filename\x18\x05 \x01(\tH\x00R\x0efileByFilenameB\x11\n" +
	"\x0fmessage_request\"\xba\x03\n" +
	"\x18ServerReflectionResponse\x12\x1d\n" +
	"\n" +
	"valid_host\x18\x01 \x01(\tR\tvalidHost\x12V\n" +
	"\x10original_request\x18\x02 \x01(\v2+.trpc.reflection.v1.ServerReflectionRequestR\x0foriginalRequest\x12f\n" +
	"\x18file_descriptor_response\x18\x04 \x01(\v2*.trpc.reflection.v1.FileDescriptorResponseH\x00R\x16fileDescriptorResponse\x12_\n" +
	"\x16list_services_response\x18\x05 \x01(\v2'.trpc.reflection.v1.ListServiceResponseH\x00R\x14listServicesResponse\x12J\n" +
	"\x0eerror_response\x18\x06 \x01(\v2!.trpc.reflection.v1.ErrorResponseH\x00R\rerrorResponseB\x12\n" +
	"\x10message_response\"L\n" +
	"\x16FileDescriptorResponse\x122\n" +
	"\x15file_descriptor_proto\x18\x01 \x03(\fR\x13fileDescriptorProto\"T\n" +
	"\x13ListServiceResponse\x12=\n" +
	"\aservice\x18\x01 \x03(\v2#.trpc.reflection.v1.ServiceResponseR\aservice\"y\n" +
	"\x0fServiceResponse\x124\n" +
	"\x16interface_service_name\x18\x01 \x01(\tR\x14interfaceServiceName\x120\n" +
	"\x14routing_service_name\x18\x02 \x01(\tR\x12routingServiceName\"S\n" +
	"\rErrorResponse\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x05R\terrorCode\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage2\x86\x01\n" +
	"\x10ServerReflection\x12r\n" +
	"\x15ServiceReflectionInfo\x12+.trpc.reflection.v1.ServerReflectionRequest\x1a,.trpc.reflection.v1.ServerReflectionResponseBT\n" +
	"\x1dcom.tencent.trpc.protobuf.extZ3trpc.group/trpc/trpc-protocol/pb/go/trpc/reflectionb\x06proto3"

var (
	file_trpc_reflection_reflection_proto_rawDescOnce sync.Once
	file_trpc_reflection_reflection_proto_rawDescData []byte
)

func file_trpc_reflection_reflection_proto_rawDescGZIP() []byte {
	file_trpc_reflection_reflection_proto_rawDescOnce.Do(func() {
		file_trpc_reflection_reflection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trpc_reflection_reflection_proto_rawDesc), len(file_trpc_reflection_reflection_proto_rawDesc)))
	})
	return file_trpc_reflection_reflection_proto_rawDescData
}

var file_trpc_reflection_reflection_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_trpc_reflection_reflection_proto_goTypes = []any{
	(*ServerReflectionRequest)(nil),  // 0: trpc.reflection.v1.ServerReflectionRequest
	(*ServerReflectionResponse)(nil), // 1: trpc.reflection.v1.ServerReflectionResponse
	(*FileDescriptorResponse)(nil),   // 2: trpc.reflection.v1.FileDescriptorResponse
	(*ListServiceResponse)(nil),      // 3: trpc.reflection.v1.ListServiceResponse
	(*ServiceResponse)(nil),          // 4: trpc.reflection.v1.ServiceResponse
	(*ErrorResponse)(nil),            // 5: trpc.reflection.v1.ErrorResponse
}
var file_trpc_reflection_reflection_proto_depIdxs = []int32{
	0, // 0: trpc.reflection.v1.ServerReflectionResponse.original_request:type_name -> trpc.reflection.v1.ServerReflectionRequest
	2, // 1: trpc.reflection.v1.ServerReflectionResponse.file_descriptor_response:type_name -> trpc.reflection.v1.FileDescriptorResponse
	3, // 2: trpc.reflection.v1.ServerReflectionResponse.list_services_response:type_name -> trpc.reflection.v1.ListServiceResponse
	5, // 3: trpc.reflection.v1.ServerReflectionResponse.error_response:type_name -> trpc.reflection.v1.ErrorResponse
	4, // 4: trpc.reflection.v1.ListServiceResponse.service:type_name -> trpc.reflection.v1.ServiceResponse
	0, // 5: trpc.reflection.v1.ServerReflection.ServiceReflectionInfo:input_type -> trpc.reflection.v1.ServerReflectionRequest
	1, // 6: trpc.reflection.v1.ServerReflection.ServiceReflectionInfo:output_type -> trpc.reflection.v1.ServerReflectionResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_trpc_reflection_reflection_proto_init() }
func file_trpc_reflection_reflection_proto_init() {
	if File_trpc_reflection_reflection_proto != nil {
		return
	}
	file_trpc_reflection_reflection_proto_msgTypes[0].OneofWrappers = []any{
		(*ServerReflectionRequest_FileContainingSymbol)(nil),
		(*ServerReflectionRequest_ListServices)(nil),
		(*ServerReflectionRequest_FileByFilename)(nil),
	}
	file_trpc_reflection_reflection_proto_msgTypes[1].OneofWrappers = []any{
		(*ServerReflectionResponse_FileDescriptorResponse)(nil),
		(*ServerReflectionResponse_ListServicesResponse)(nil),
		(*ServerReflectionResponse_ErrorResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trpc_reflection_reflection_proto_rawDesc), len(file_trpc_reflection_reflection_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trpc_reflection_reflection_proto_goTypes,
		DependencyIndexes: file_trpc_reflection_reflection_proto_depIdxs,
		MessageInfos:      file_trpc_reflection_reflection_proto_msgTypes,
	}.Build()
	File_trpc_reflection_reflection_proto = out.File
	file_trpc_reflection_reflection_proto_goTypes = nil
	file_trpc_reflection_reflection_proto_depIdxs = nil
}
