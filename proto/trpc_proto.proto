syntax = "proto3";

package trpc;

// 请求协议头
message RequestProtocol {
  // 协议版本
  uint32      version                   = 1; 
  
  // 请求的调用类型
  // 比如: 普通调用，单向调用，流式调用
  uint32      call_type                 = 2;
  
  // 流id
  uint32    stream_id                   = 3;
  
  // 请求唯一id
  uint32    request_id                  = 4;
  
  // 请求的超时时间，单位ms
  uint32    timeout                     = 5;
  
  // 主调服务的名称
  string    caller                      = 6;
  
  // 被调服务的路由名称
  // 规范格式，trpc.应用名.服务名.pb的service名
  string    callee                      = 7;
  
  // 调用服务的接口名
  // 规范格式，pb idl定义的接口名
  string    func                        = 8;
  
  // 框架信息透传的消息类型
  // 比如调用链、染色key、灰度、鉴权、流结束、多环境、set名称等的标识
  uint32    message_type                = 9;
  
  // 框架透传的信息key-value对，目前分两部分
  // 1是框架层要透传的信息，key的名字要以trpc_开头
  // 2是业务层要透传的信息，业务可以自行设置
  map<string, string> trans_info        = 10;
  
  // 请求数据的数据类型
  // 比如: proto/jce/json, 默认proto
  uint32    content_type                = 11;
  
  // 请求数据使用的压缩方式
  // 比如: gzip/snappy/..., 默认不使用
  uint32    content_encoding            = 12;
  
  // 二进制数据
  repeated  bytes data                  = 99;
}

// 响应协议头
message ResponseProtocol {
  // 协议版本
  uint32      version                   = 1; 
  
  // 请求的调用类型
  // 比如: 普通调用，单向调用，流式调用
  uint32      call_type                 = 2;
  
  // 流式id
  uint32    stream_id                   = 3;
  
  // 请求唯一id
  uint32    request_id                  = 4;
  
  // 请求在框架层的错误返回码
  int32    ret                          = 5;
  
  // 接口的错误返回码
  // 建议业务在使用时，标识成功和失败，0代表成功，其它代表失败
  int32    func_ret                     = 6;
  
  // 调用结果信息描述
  // 失败的时候用
  string    error_msg                   = 7;
  
  // 框架信息透传的消息类型
  // 比如调用链、染色key、灰度、鉴权、流结束、多环境、set名称等的标识
  uint32    message_type                = 8;
  
  // 框架透传回来的信息key-value对，
  // 目前分两部分
  // 1是框架层透传回来的信息，key的名字要以trpc_开头
  // 2是业务层透传回来的信息，业务可以自行设置
  map<string, string> trans_info        = 9;
  
  // 响应数据的编码类型
  // 比如: proto/jce/json, 默认proto
  uint32    content_type                = 10;
  
  // 响应数据使用的压缩方式
  // 比如: gzip/snappy/..., 默认不使用
  uint32    content_encoding            = 11;
  
  // 二进制数据
  repeated  bytes data                  = 99;
}
