// Tencent is pleased to support the open source community by making tRPC available.
// Copyright (C) 2023 THL A29 Limited, a Tencent company. All rights reserved.
// If you have downloaded a copy of the tRPC source code from Tencent,
// please note that tRPC source code is licensed under the Apache 2.0 License,
// A copy of the Apache 2.0 License is included in this file.

// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// This file may have been modified by THL A29 Limited ("Tencent Modifications"). 
// All Tencent Modifications are Copyright (C) 2023 THL A29 Limited.

syntax = "proto3";

package trpc.api;

option go_package = "trpc.group/trpc/trpc-protocol/pb/go/trpc/api";
option java_package = "com.tencent.trpc.protobuf.ext";

message HttpRule {
    // Selects a method to which this rule applies.
    //
    // Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
    string selector = 1;

    // Determines the URL pattern is matched by this rules. This pattern can be
    // used with any of the {get|put|post|delete|patch} methods. A custom method
    // can be defined using the 'custom' field.
    oneof pattern {
        // Maps to HTTP GET. Used for listing and getting information about
        // resources.
        string get = 2;

        // Maps to HTTP PUT. Used for replacing a resource.
        string put = 3;

        // Maps to HTTP POST. Used for creating a resource or performing an action.
        string post = 4;

        // Maps to HTTP DELETE. Used for deleting a resource.
        string delete = 5;

        // Maps to HTTP PATCH. Used for updating a resource.
        string patch = 6;

        // The custom pattern is used for specifying an HTTP method that is not
        // included in the `pattern` field, such as HEAD, or "*" to leave the
        // HTTP method unspecified for this rule. The wild-card rule is useful
        // for services that provide content to Web (HTML) clients.
        CustomHttpPattern custom = 8;
    }

    // The name of the request field whose value is mapped to the HTTP request
    // body, or `*` for mapping all request fields not captured by the path
    // pattern to the HTTP body, or omitted for not having any HTTP request body.
    //
    // NOTE: the referred field must be present at the top-level of the request
    // message type.
    string body = 7;

    // Optional. The name of the response field whose value is mapped to the HTTP
    // response body. When omitted, the entire response message will be used
    // as the HTTP response body.
    //
    // NOTE: The referred field must be present at the top-level of the response
    // message type.
    string response_body = 12;

    // Additional HTTP bindings for the selector. Nested bindings must
    // not contain an `additional_bindings` field themselves (that is,
    // the nesting may only be one level deep).
    repeated HttpRule additional_bindings = 11;
}

// A custom pattern is used for defining custom HTTP verb.
message CustomHttpPattern {
    // The name of this custom HTTP verb.
    string kind = 1;

    // The path matched by this custom verb.
    string path = 2;
}
